'''
--> Ideia fundamentada em MARKOV CHAIN e GRAMATICA
--> Os estados seguintes dependem do estado atual
--> Existem várias tabelas de probabilidade, a tabela a ser usada é decidida com base no estado atual
(Ver exemplo do JFlap)

--> Escolhe-se o mood x de acordo com a fase do jogo
--> A gramática da linguagem MELODIA PRINCIPAL se inicia

S (simbolo inicial da gramatica)
S -> HVRM
H: deriva todas as harmonias do mood x, escolhidas de forma aleatoria
EXEMPLO: se x é um sad, H deriva as harmonias do campo MENOR
H -> Am | Bm | Cm | Dm | A#m | B#m | C#m | ...

V: velocidade inicial, tambem de acordo com o mood
EXEMPLO: moods sombrios sao devagares e moods alegres sao rapidos
V -> 80bpm | 100bpm | 120bpm | ...

R: ritmo (ex: 4/4)

M: MELODIA PRINCIPAL. Objetos em geral, gerados aleatoriamente
M -> AO
A: altura
A -> crescente | descrescente | mudar a oitava
        45%          45%             10%

O: objetos em geral
O -> M | N | P | T | lambda (100% depois de n compassos percorridos, ou se o nivel acabar, etc) 
    20% 50% 25%  5%    0%
N -> seminima | minima | colcheia | semicolcheia | ...
P -> mesma logica, mas para as pausas
Quanto mais proximo do ritmo, maior a probabilidade
Se o ritmo é 4/4, a chance de seminima é grande

T: acrescenta o tema do mood/jogo, transposto para a harmonia selecionada
T -> transposto acima | transposto abaixo | original | ...


--> Depois de H, V e R serem decididos, uma gramatica auxiliar começa a rodar ao mesmo tempo que a outra
--> Ela acrescenta acordes, notas, ornamentos, etc. à melodia principal

G (simbolo inicial)
G -> GN | GV | GO | lambda
    90%   3%   7%     0%

N -> nota | pausa | A
      60%    10%   30%

O -> ornamentos diversos | mudar a oitava
A -> arpejo | acorde


--> A cada par de variaveis de melodia principal/gramatica auxiliar gerado, toca-se o offset atual da partitura

'''